{"version":3,"sources":["webpack:///./src/components/notes/list.jsx"],"names":["Item","props","icon","note","id","titleWithDefault","Row","console","log","updatedAt","Date","cozyMetadata","options","day","month","year","formatedUpdatedAt","toLocaleDateString","undefined","List","notes","length","map","_id","ConnectedList","data","fetchStatus","isLoading","queryConnect","query","as"],"mappings":"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","file":"app.6ce878d05366e5e1d504.hot-update.js","sourcesContent":["import React from 'react'\n\nimport Spinner from 'cozy-ui/react/Spinner'\nimport { Link } from 'react-router-dom'\n\nimport { queryConnect } from 'cozy-client'\nimport ListItemText from 'cozy-ui/react/ListItemText'\nimport Button from 'cozy-ui/react/Button'\nimport Icon from 'cozy-ui/react/Icon'\nimport { MainTitle } from 'cozy-ui/react/Text'\n\nimport Add from './add'\nimport query from './query'\nimport { titleWithDefault } from './utils'\n\nimport HeaderMenu from '../header_menu.jsx'\n\nimport icon from '../../assets/icons/icon-note-32.svg'\n\nconst Item = props => <div className=\"note-item\">\n  <Icon icon={icon} width={32} height={32} className=\"note-icon\" />\n  <Link to={`/n/${props.note.id}`} className=\"note-link\">\n    <ListItemText\n      primaryText={titleWithDefault(props.note)}\n      secondaryText='/Notes/2019/demo'\n    />\n  </Link>\n</div>\n\nconst Row = props => {\n  console.log(props.note)\n  const updatedAt = new Date(props.note.cozyMetadata.updatedAt)\n  const options = { day: \"numeric\", month: \"long\", year: \"numeric\" }\n  const formatedUpdatedAt = updatedAt.toLocaleDateString(undefined, options)\n  return <tr class=\"c-table-row\">\n    <th class=\"c-table-cell c-table-cell--primary\">\n      <Item {...props} />\n    </th>\n    <td class=\"c-table-cell\">\n      <time datatime={props.note.cozyMetadata.updatedAt}>\n        {formatedUpdatedAt}\n      </time>\n    </td>\n    <td class=\"c-table-cell\">\n      —\n    </td>\n    <td class=\"c-table-cell\">\n      <Button\n        theme=\"action\"\n        extension=\"narrow\"\n        icon={<Icon icon=\"dots\" color=\"coolGrey\" width=\"17\" height=\"17\" />}\n        iconOnly\n        label='actions'\n      />\n    </td>\n  </tr>\n}\n\nconst List = props => {\n  const { notes } = props\n  return !notes || !notes.length ? null : (\n    <table className=\"notes-list c-table\">\n      <thead class=\"c-table-head\">\n        <tr class=\"c-table-row-head\">\n          <th class=\"c-table-header\">Nom</th>\n          <th class=\"c-table-header\">Dernière mise à jour</th>\n          <th class=\"c-table-header\">Partages</th>\n          <th class=\"c-table-header\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        {notes.map(note => (\n          <Row key={note._id} note={note} />\n        ))}\n      </tbody>\n    </table>\n  )\n}\n\nconst ConnectedList = props => {\n  const { data, fetchStatus } = props.notes\n  // cozy-client statuses\n  const isLoading = fetchStatus === 'loading' || fetchStatus === 'pending'\n  return (\n    <div className=\"notes notes-list-container\">\n      {isLoading ? (\n        <Spinner size=\"xxlarge\" middle />\n      ) : (\n        <div>\n          <HeaderMenu left={<MainTitle tag=\"h1\">Mes notes</MainTitle>} right={<Add />} />\n          <List notes={data} />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default queryConnect({\n  notes: {\n    query: query,\n    as: 'notes'\n  }\n})(ConnectedList)\n"],"sourceRoot":""}